@model MKEFishFries.Models.VisitorActionsViewModel

@{
    ViewBag.Title = "VisitorActions";

}

@section stripe{
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        // Create a Stripe client.
        var stripe = Stripe('pk_test_uRKJ0c3e0Gh43qLamoa74J1h00GzzjvocV');

        // Create an instance of Elements.
        var elements = stripe.elements();

        // Custom styling can be passed to options when creating an Element.
        // (Note that this demo uses a wider set of styles than the guide below.)
        var style = {
            base: {
                color: '#32325d',
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: 'antialiased',
                fontSize: '16px',
                '::placeholder': {
                    color: '#aab7c4'
                }
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };

        // Create an instance of the card Element.
        var card = elements.create('card', { style: style });

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Handle form submission.
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    // Inform the user if there was an error.
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Send the token to your server.
                    stripeTokenHandler(result.token);
                }
            });
        });

        // Submit the form with the token ID.
        function stripeTokenHandler(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
        }
    </script>
    }

<h2>VisitorActions</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



    @*<div class="form-group">
            @Html.DisplayText("Sign up for Notifications")
            <div class="col-md-10">
                @Html.CheckBox("Sign up for Notifications", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecieveComments, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <br />
    <div class="form-group">
        @Html.Label("Sign up for notifications (enter 'Y' to sign up): ", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.TextBox("SignUp")
        </div>
        <br />
        <br />
    </div>

    <div class="form-group">
        @Html.Label("Enter a comment for the parish administrator: ", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.TextBox("Comment")
        </div>
        <br />
        <br />
    </div>
    <div class="form-group">
        @Html.Label("If you wish to donate to this parish, enter a dollar amount (whole dollars please) here: ", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.TextBox("DollarAmount")
        </div>
        <br />
        <br />
    </div>
    @*<p style="text-align:left">Enter Credit card number</p>
        <div class="form-group">
            <div class="col-md-10">
                @Html.TextBox("CreditCardNumber")
            </div>
            <br />
            <br />
        </div>
        <p style="text-align:left">Enter Credit card epiration date in ##/## format</p>
        <div class="form-group">

            <div class="col-md-10">
                @Html.TextBox("ExpirationDate")
            </div>
            <br />
            <br />
        </div>
        <p style="text-align:left">Enter credit card security number</p>
        <div class="form-group">

            <div class="col-md-10">
                @Html.TextBox("SecurityNumber")
            </div>
        </div>*@
        <br>
        <div class="form-horizontal">

            

            <form action="/VisitorController/VisitorActions" method="post" id="payment-form">
                <div class="form-row">
                    <label for="card-element">
                        Credit or debit card
                    </label>
                    <div id="card-element">
                        <!-- A Stripe Element will be inserted here. -->
                    </div>

                    <!-- Used to display form errors. -->
                    <div id="card-errors" role="alert"></div>
                </div>

                <button>Donate</button>
            </form>
        </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
